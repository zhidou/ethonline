/**
 * Simple, unannotated asset spec
 */
export interface Asset {
  // The asset's token ID, or null if ERC-20
  token_id: string | null;
  // The asset's contract address
  token_address: string;
  // Optional for ENS names
  name?: string;
  // Optional for fungible items
  decimals?: number;
}

/**
 * Types of asset contracts
 * Given by the asset_contract_type in the OpenSea API
 */
export enum AssetContractType {
  Fungible = "fungible",
  SemiFungible = "semi-fungible",
  NonFungible = "non-fungible",
  Unknown = "unknown",
}

/**
 * Annotated asset contract with OpenSea metadata
 */
export interface OpenSeaAssetContract {
  // Name of the asset's contract
  name: string;
  // Address of this contract
  address: string;
  // Type of token (fungible/NFT)
  type: AssetContractType;

  // Total fee levied on sellers by this contract, in basis points
  seller_fee_basis_points: number;
  // Total fee levied on buyers by this contract, in basis points
  buyer_fee_basis_points: number;

  // Description of the contract
  description: string;
  // Contract's Etherscan / OpenSea symbol
  token_symbol: string;
  // Image for the contract
  image_url: string;
  // Object with stats about the contract
  stats?: object;
  // Array of trait types for the contract
  traits?: object[];
  // Link to the contract's main website
  external_link?: string;
  // Link to the contract's wiki, if available
  wiki_link?: string;
}

interface NumericalTraitStats {
  min: number;
  max: number;
}

interface StringTraitStats {
  [key: string]: number;
}

export interface OpenSeaTraitStats {
  [trait_name: string]: NumericalTraitStats | StringTraitStats;
}

/**
 * Annotated collection with OpenSea metadata
 */
export interface OpenSeaCollection {
  // Name of the collection
  name: string;
  // Slug, used in URL
  slug: string;
  // Accounts allowed to edit this collection
  editors: string[];
  // Whether this collection is hidden from the homepage
  hidden: boolean;
  // Whether this collection is featured
  featured: boolean;
  // Date collection was created
  created_date: Date;

  // Description of the collection
  description: string;
  // Image for the collection
  image_url: string;
  // Image for the collection, large
  large_image_url: string;
  // Image for the collection when featured
  featured_image_url: string;
  // Object with stats about the collection
  stats: object;
  // Data about displaying cards
  display_data: object;
  // Address for dev fee payouts
  payout_address?: string;
  // Array of trait types for the collection
  trait_stats: OpenSeaTraitStats;
  // Link to the collection's main website
  external_link?: string;
  // Link to the collection's wiki, if available
  wikiLink?: string;
}

export interface OpenSeaUser {
  // Username for this user
  username: string;
}

/**
 * The OpenSea account object appended to orders, providing extra metadata, profile images and usernames
 */
export interface OpenSeaAccount {
  // Wallet address for this account
  address: string;
  // Public configuration info, including "affiliate" for users who are in the OpenSea affiliate program
  config: string;

  // This account's profile image - by default, randomly generated by the server
  profile_img_url: string;

  // More information explicitly set by this account's owner on OpenSea
  user: OpenSeaUser | null;
}

/**
 * Annotated asset spec with OpenSea metadata
 */
export interface OpenSeaAsset extends Asset {
  asset_contract: OpenSeaAssetContract;
  collection: OpenSeaCollection;
  // The asset's given name
  name: string;
  // Description of the asset
  description: string;
  // Owner of the asset
  owner: OpenSeaAccount;

  // Whether the asset is on a pre-sale (so token ids aren't real)
  is_presale: boolean;
  // The cached and size-optimized image url for this token
  image_url: string;
  // The image preview url for this token.
  // Note: Loses gif animation and may have issues with SVGs
  image_preview_url: string;
  // The original image url for this token
  image_url_original: string;
  // Thumbnail url for this token
  image_url_thumbnail: string;
  // Link to token on OpenSea
  permalink: string;
  // Link to token on dapp's site
  external_link: string;
  // Array of traits on this token
  traits: object[];
  // Number of times this token has been traded (sold)
  num_sales: number;
  // The suggested background color for the image url
  background_color: string | null;
}

// React.useEffect(() => {
//   if (!user.address) return;
//   const options = {
//     method: "GET",
//     headers: {
//       Accept: "application/json",
//       "X-API-KEY": "0f079ae1e1a2465eba63a6b801a8b010",
//     },
//   };

//   fetch(
//     `https://api.opensea.io/api/v1/assets?owner=${user.address}&order_direction=desc&limit=50&include_orders=false`,
//     options
//   )
//     .then((response) => response.json())
//     .then(
//       (response: { next: any; previous: any; assets: OpenSeaAsset[] }) => {
//         const { assets } = response;
//         setAssets(assets);
//       }
//     )
//     .catch((err) => console.error(err));
// }, [user.address]);
